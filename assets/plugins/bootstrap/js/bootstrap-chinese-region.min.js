(function(root,factory){
if(typeof module === 'object' && module && typeof module.exports === 'object'){
module.exports = factory();
}else if ( typeof define === "function" && define.amd ) {
define( "bs-chinese-region", ["jquery","bootstrap"], factory);
}else{
factory(root.jQuery);
}
})(window ,function($){
var ChineseRegion = function($el){
this._areas = [];
this._defaultId = "";
this.$el = $el;
this.$input = this.$el.find('input[type=text]');
this.$tabContent = this.$el.find('.tab-content');
this.$tabContent.children().first().on('click','a',$.proxy(this.onClearAreas,this));
this.$tabContent.children().on('click','a',$.proxy(this.onAreasChanged,this));
this.$tabContent.children().last().on('click','a',$.proxy(this.onClose,this));
this.$el.parents('form').on('submit',$.proxy(this.onSubmit,this));
if(!!$.fn.dropdown.Constructor) this.initDropdownModule();
this._defaultId = this.$el.data('def-val') !== undefined ? this.$el.find(this.$el.data('def-val')).val() : this.$input.val();
this.submitType = this.$el.data('submit-type');
this.level(this.$el.data('min-level'),this.$el.data('max-level'));
};
ChineseRegion.prototype = new $.fn.dropdown.Constructor();
ChineseRegion.prototype._toggle = ChineseRegion.prototype.toggle;
ChineseRegion.prototype.toggle = function() {
ChineseRegion.prototype._toggle.call(this.$input);
};
ChineseRegion.prototype.initDropdownModule = function() {
this.$el.on('click','.dropdown-menu',function(e){
$(e.target).trigger('click.bs.tab.data-api');
e.stopPropagation();
});
};
ChineseRegion.prototype.onClearAreas = function(e) {
this.areas = [];
};
ChineseRegion.prototype.onClose = function(e) {
this.toggle();
var data = this.getAreaData($(e.target));
this.$el.trigger('completed.bs.chinese-region',[this.areas]);
};
ChineseRegion.prototype.onSubmit = function(e) {
if(this.submitType == 'id'){
this.$input.val(this.areas[this.areas.length-1].id);
}
};
ChineseRegion.prototype.getAreaData = function($el) {
var data = $el.data();
data.name = $el.text();
return data;
};
ChineseRegion.prototype.onAreasChanged = function(e) {
var currentId = $(e.target).attr('data-id');
this.areas = this.getCurrentAreas(currentId);
this.renderAreasPanel(this.getAreasByParentId(currentId));
this.$el.trigger('changed.bs.chinese-region',[this.areas]);
};
ChineseRegion.prototype.getAreasByParentId = function(id) {
var result = [];
for (var i = 0; i < this._source.length; i++) {
if(this._source[i].level>this.maxLevel || this._source[i].level<this.minLevel) continue;
if(this._source[i].parentId != id) continue;
result.push(this._source[i]);
}
return result;
};
ChineseRegion.prototype.getAreasByLevel = function(level) {
var result = [];
for (var i = 0; i < this._source.length; i++) {
if(this._source[i].level>this.maxLevel || this._source[i].level<this.minLevel) continue;
if(this._source[i].level != level) continue;
result.push(this._source[i]);
}
return result;
};
ChineseRegion.prototype.getAreaById = function(id) {
var result;
for (var i = 0; i < this._source.length; i++) {
if(this._source[i].id == id){
result = this._source[i];
break;
}
}
return result;
};
ChineseRegion.prototype.getCurrentAreas = function(lastId) {
var result = [];
for (var i = this.minLevel; i <= this.maxLevel; i++) {
var area = this.getAreaById(lastId);
if(area === undefined) break;
if(area.level>this.maxLevel || area.level<this.minLevel) continue;
result.unshift(area);
lastId = area.parentId;
}
return result;
};
ChineseRegion.prototype.renderAreasPanel = function(data,first) {
var $panel,$navbarButton;
if(first){
$panel = this.$tabContent.children(':first');
$navbarButton = this.$el.find('.nav-tabs li:first');
}else{
$panel = this.$tabContent.children('.active').next();
$navbarButton = this.$el.find('.nav-tabs li.active').next();
}
if(data && data.length){
$panel.empty();
for (var i = 0; i < data.length; i++) {
var area = data[i];
$panel.append('<a href="javascript:;" class="areas-item" data-id="'+area.id+'" data-type="'+area.type+'">'+area.name+'</a> ');
}
}
$navbarButton.children('a').tab('show');
this.$el.children('input').val('');
this.$tabContent.children().find('a').removeClass('current');
for (var i = 0; i < this.areas.length; i++) {
this.$input.val(this.$input.val()+this.areas[i].name+' ');
this.$tabContent.find('a[data-id='+this.areas[i].id+']').addClass('current');
this.$el.children('input').eq( i+1 ).val( this.areas[i].id );
}
};
ChineseRegion.prototype.render = function(id) {
this.renderAreasPanel(this.getAreasByLevel(this.minLevel),true);
this.areas = this.getCurrentAreas(id);
for (var i = 0; i < this.areas.length; i++) {
var area = this.areas[i];
this.renderAreasPanel(this.getAreasByParentId(area.id));
}
};
ChineseRegion.prototype.source = function(data,filter) {
if(arguments.length<=0) return this._source;
this._source = typeof filter == 'function'?filter(data):data;
this.render(this._defaultId);
};
ChineseRegion.prototype.level = function(min,max) {
this.minLevel = min;
this.maxLevel = max;
};
Object.defineProperty(ChineseRegion.prototype,'areas',{
configurable: false,
get: function(){
return this._areas;
},
set: function(value){
this._areas = value;
}
});
Object.defineProperty(ChineseRegion.prototype,'minLevel',{
configurable: false,
get: function(){
return this._minLevel;
},
set: function(value){
this._minLevel = value;
}
});
Object.defineProperty(ChineseRegion.prototype,'maxLevel',{
configurable: false,
get: function(){
return this._maxLevel;
},
set: function(value){
this._maxLevel = value;
}
});
$.fn.chineseRegion = function(){
var options = Array.prototype.shift.apply(arguments),
arg = arguments,
chineseRegion = this.data('bs-chinese-region');
if(chineseRegion === undefined) this.data('bs-chinese-region',(chineseRegion = new ChineseRegion(this)));
if(typeof options == 'string') chineseRegion[options].apply(chineseRegion,arg);
return this;
};
$.fn.chineseRegion.Constructor = ChineseRegion;
});